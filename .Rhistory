by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data2[agg_FODPM_data2$kat=="preteen"|agg_FODPM_data2$kat=="teen"]
ab <- agg_FODPM_data2[agg_FODPM_data2$kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = år, y = x, color = kat))+
ggplot(data = agg_FODPM_data2, aes(x = År, y = x))+
ggplot(data = ab, aes(x = år, y = x, color = kat))+
ggplot(data = agg_FODPM_data2, aes(x = År, y = x))+
ggplot(data = ab, aes(x = år, y = x, color = kat))+
ggplot(data = agg_FODPM_data2, aes(x = År, y = x))+ geom_line()
ggplot(data = ab, aes(x = år, y = x, color = kat))+geom_line()+geom_point()
ggplot(data = ab, aes(x = år, y = x, color = kat))+geom_line()+geom_point()
#
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = år, y = x, color = kat))+geom_line()+geom_point()
ab <- agg_FODPM_data_new[agg_FODPM_data_new$kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = år, y = x, color = kat))+geom_line()+geom_point()
ggplot(data = ab, aes(x = År, y = x, color = kat))+geom_line()+geom_point()
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
ab <- agg_FODPM_data_new[agg_FODPM_data_new$kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
#plot
library(ggplot2)
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
#
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("preteen", "teen"),]
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
install.packages(zoo)
install.packages("write.csv")
install.packages("zoo")
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data = ab, aes(x = År, y = x, color = Kat))+geom_line()+geom_point()
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
View(agg_FODPM_data2)
View(aggFODPM_data)
give_age_kat <- function(x){
return("teen")
}
opdel_alder <- function(alder) {
if (alder < 10) {
kategori <- "Baren"
} else if (alder >= 10 && alder < 14) {
kategori <- "Preteen"
} else if (alder >= 14 && alder < 20) {
kategori <- "Teen"
} else if (alder >= 20 && alder < 30) {
kategori <- "Ung"
} else if (alder >= 30 && alder < 40) {
kategori <- "Voksen"
} else if (alder >= 40 && alder < 50) {
kategori <- "Voksen Voksen"
} else if (alder >= 50 && alder < 60) {
kategori <- "Senioer"
} else if (alder >= 60 && alder < 70) {
kategori <- "Ældre"
} else if (alder >= 70 && alder < 80) {
kategori <- "Gammel"
} else {
kategori <- "Meget ældre"
}
return(kategori)
}
# Fra timen & powerpointen
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
source("~/Documents/RStudio - Datasæt -Dataanalyse/FODPM.RR.R")
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
library("dkstat")
source("util.R")
# table FODPM
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis
str(FODPMdata)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x, by = list(Mage = agg_FODPM_data$nyage, Tid = agg_FODPM_data$Tid), FUN = sum)
# Kategori variabel FEJL
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
#
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
give_age_kat <- function(x){
return("teen")
}
opdel_alder <- function(alder) {
if (alder < 10) {
kategori <- "Baren"
} else if (alder >= 10 && alder < 14) {
kategori <- "Preteen"
} else if (alder >= 14 && alder < 20) {
kategori <- "Teen"
} else if (alder >= 20 && alder < 30) {
kategori <- "Ung"
} else if (alder >= 30 && alder < 40) {
kategori <- "Voksen"
} else if (alder >= 40 && alder < 50) {
kategori <- "Voksen Voksen"
} else if (alder >= 50 && alder < 60) {
kategori <- "Senioer"
} else if (alder >= 60 && alder < 70) {
kategori <- "Ældre"
} else if (alder >= 70 && alder < 80) {
kategori <- "Gammel"
} else {
kategori <- "Meget ældre"
}
return(kategori)
}
source("~/.active-rstudio-document")
install.packages("devtools")
install.packages("devtools")
library("devtools")
library("dkstat")
source("util.R")
Get all tables
allet <- dst_get_tables(lang = "da")
write.csv(allet,"alletaps.csv", row.names = F)
tabel FODPM
find meta for the tables
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
Get all tables
library("dkstat")
source("util.R")
Get all tables
allet <- dst_get_tables(lang = "da")
write.csv(allet,"alletaps.csv", row.names = F)
find meta for the tables
FODPM_meta <- dst_meta("FODPM")
get the data
FODPM_data <- dst_get_data(table = "FODPM",query = FODPM_meta_filters, lang = "da")
data tjek
str(FODPM_data)
fjern LFNR
FODPM_data <- FODPM_data[,-2]
agFODPM_data <- aggregate (x=FODPM_data$value,
by = list(Mage = FODPM_data$MODERSALDER,
Tid = FODPM_data$TID),
FUN = sum)
lav age om til tal
agFODPM_data$nyage <- sapply(agFODPM_data$Mage, function(x) gsub(" år","", x))
# lav til numeric
agFODPM_data$nyage <- as.numeric(agFODPM_data$nyage)
lav en kategori variable
agFODPM_data$kat <- sapply(agFODPM_data$nyage, FUN = opdel_alder)
agFODPM_data2 <- aggregate(agFODPM_data$x,
by = list(
Kat = agFODPM_data$kat,
Year = agFODPM_data$Tid),
FUN = sum)
plot
library(ggplot2)
ab <- agFODPM_data2[agFODPM_data2$Kat =="Preteen"|agFODPM_data2$Kat = "Teen"]
ab <- agFODPM_data2[agFODPM_data2$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes (x = Year, y = x, color = Kat))+ geom_line()+geom_point()
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teenager"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teenager"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
colnames(agg_FODPM_data_new)
unique(agg_FODPM_data_new$Kat)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
View(ab)
View(agg_FODPM_data_new)
# Kategori variabel FEJL
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
View(agFODPM_data)
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
# Kategori variabel FEJL
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x, by = list(Mage = agg_FODPM_data$nyage, Tid = agg_FODPM_data$Tid), FUN = sum)
View(agg_FODPM_data_new)
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
# Kategori variabel FEJL
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
source("util.R")
# Kategori variabel FEJL
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
View(agg_FODPM_data)
#
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
opdel_alder <- function(alder) {
if (alder < 10) {
kategori <- "Baren"
} else if (alder >= 10 && alder < 14) {
kategori <- "Preteen"
} else if (alder >= 14 && alder < 20) {
kategori <- "Teen"
} else if (alder >= 20 && alder < 30) {
kategori <- "Ung"
} else if (alder >= 30 && alder < 40) {
kategori <- "Voksen"
} else if (alder >= 40 && alder < 50) {
kategori <- "Voksen Voksen"
} else if (alder >= 50 && alder < 60) {
kategori <- "Senioer"
} else if (alder >= 60 && alder < 70) {
kategori <- "Ældre"
} else if (alder >= 70 && alder < 80) {
kategori <- "Gammel"
} else {
kategori <- "Meget ældre"
}
return(kategori)
}
# Fra timen & powerpointen
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
library("dkstat")
source("util.R")
# table FODPM (FODPM = Unge mødre fra dkstat)
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis
str(FODPMdata)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x, by = list(Mage = agg_FODPM_data$nyage, Tid = agg_FODPM_data$Tid), FUN = sum)
# Kategori variabel
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
# Aggregering
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
# Fra timen & powerpointen
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
library("dkstat")
source("util.R")
# table FODPM (FODPM = Unge mødre fra dkstat)
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis
str(FODPMdata)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x, by = list(Mage = agg_FODPM_data$nyage, Tid = agg_FODPM_data$Tid), FUN = sum)
# Kategori variabel
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
# Aggregering
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
setwd("~/Documents/RStudio - Datasæt -Dataanalyse/DKstat")
setwd("~/Documents/RStudio - Datasæt -Dataanalyse/DKstat")
save.image("~/Documents/RStudio - Datasæt -Dataanalyse/DKstat/Untitled.RData")
library(readr)
X2023918103227431877893NKHC2137953684214 <- read_delim("Documents/RStudio - Datasæt -Dataanalyse/2023918103227431877893NKHC2137953684214.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 2)
library(readr)
X2Forventning_Statistikbanken <- read_delim("Documents/RStudio - Datasæt -Dataanalyse/2Forventning - Statistikbanken.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 2)
library(readr)
Xfaktiske_forbrug <- read_delim("Documents/RStudio - Datasæt -Dataanalyse/faktiske_forbrug.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 2)
setwd("~/Documents/RStudio/DKstat")
# Peg og klik via Excel:
library(readxl)
UUheld <- read_excel("UUheld.xlsx")
View(UUheld)
# Hent via API
library(dkstat)
?my_function
"??my_function"
# Hent via API
# Hente metadata mhp filtrering
uheld_meta <- dst_meta(table = "UHELDK1", lang = "da")
# Konstruer liste med filtre
uheld_meta_filters <- list(
OMRÅDE = "*",
UHELD = "Personskade i alt",
INDBLAND = c("Almindelig personbil", "Lastbil over 3.500 kg.", "Fodgænger"),
ALDER = "*",
KØN = c("Mænd", "Kvinder"),
Tid = "*"
)
# Hente data via filtre
uheldsdata <- dst_get_data(table = "UHELDK1", query = uheld_meta_filters, lang = "da")
opdel_alder <- function(alder) {
if (alder < 10) {
kategori <- "Baren"
} else if (alder >= 10 && alder < 14) {
kategori <- "Preteen"
} else if (alder >= 14 && alder < 20) {
kategori <- "Teen"
} else if (alder >= 20 && alder < 30) {
kategori <- "Ung"
} else if (alder >= 30 && alder < 40) {
kategori <- "Voksen"
} else if (alder >= 40 && alder < 50) {
kategori <- "Voksen Voksen"
} else if (alder >= 50 && alder < 60) {
kategori <- "Senioer"
} else if (alder >= 60 && alder < 70) {
kategori <- "Ældre"
} else if (alder >= 70 && alder < 80) {
kategori <- "Gammel"
} else {
kategori <- "Meget ældre"
}
return(kategori)
}
# Fra timen & powerpointen
library(dkstat)
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
library("dkstat")
source("util.R")
# table FODPM (FODPM = Unge mødre fra dkstat)
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis (struktur)
str(FODPM_data)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x, by = list(Mage = agg_FODPM_data$nyage, Tid = agg_FODPM_data$Tid), FUN = sum)
# Kategori variabel
agg_FODPM_data$kat <- sapply(agg_FODPM_data$nyage, FUN = opdel_alder)
# Aggregering
agg_FODPM_data_new <- aggregate(agg_FODPM_data$x,
by = list(
Kat = agg_FODPM_data$kat,
År = agg_FODPM_data$Tid),
FUN = sum)
#plot
library(ggplot2)
ab <- agg_FODPM_data_new[agg_FODPM_data_new$Kat %in% c("Preteen", "Teen"),]
ggplot(data=ab, aes(x = År, y = x, color = Kat))+ geom_line()+geom_point()
# Fra timen & powerpointen
library(dkstat)
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
library("dkstat")
source("util.R")
# table FODPM (FODPM = Unge mødre fra dkstat)
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis (struktur)
str(FODPM_data)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
# Ændre age om til numbers
agg_FODPM_data$nyage <- as.numeric(agg_FODPM_data$nyage)
# Fra timen & powerpointen
library(dkstat)
allet <- dst_get_tables(lang = "da")
write.csv(allet, "alletaps.csv", row.names = FALSE)
library(readr)
alletaps <- read_csv("alletaps.csv")
View(alletaps)
library("dkstat")
source("util.R")
# table FODPM (FODPM = Unge mødre fra dkstat)
FODPM_meta <- dst_meta("FODPM")
FODPM_meta$variables
FODPM_meta$values
FODPM_meta$values$LFNR
FODPM_meta$values$Tid
# Set filters
FODPM_meta_filters = list(
MODERSALDER = "*",
LFNR = "1. barn",
Tid = "*")
# Get the data
FODPM_data <- dst_get_data(table = "FODPM", query = FODPM_meta_filters, lang = "da")
# data analysis (struktur)
str(FODPM_data)
# Fjern LFNR
FODPM_data <- FODPM_data[,-2]
agg_FODPM_data$nyage <- sapply(agg_FODPM_data$Mage, function(x) gsub("år", "", x))
View(FODPM_data)
